{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","tick","setState","this","setInterval","prevProps","name","props","console","log","clearInterval","toLocaleTimeString","React","Component","App","isClockVisible","clockName","Math","random","className","type","onClick","showClockHandler","hideClockHandler","setRandomNameHandler","ReactDOM","render","document","getElementById"],"mappings":"8MAUaA,EAAb,4MACEC,MAAe,CACbC,KAAM,IAAIC,MAFd,EAKEC,aALF,IA2BEC,KAAO,WACL,EAAKC,SAAS,CAAEJ,KAAM,IAAIC,QA5B9B,uDAOE,WACEI,KAAKH,QAAUI,YACbD,KAAKF,KACL,OAVN,gCAcE,SAAmBI,GACbA,EAAUC,OAASH,KAAKI,MAAMD,MAEhCE,QAAQC,IAAR,qCAA0CJ,EAAUC,KAApD,eAA+DH,KAAKI,MAAMD,SAjBhF,kCAqBE,WACMH,KAAKH,SACPU,cAAcP,KAAKH,WAvBzB,oBA+BE,WACE,OACE,4BACGG,KAAKN,MAAMC,KAAKa,2BAlCzB,GAA2BC,IAAMC,WCA3BC,G,kNACJjB,MAAe,CACbkB,gBAAgB,EAChBC,UAAW,G,0DAGb,WACEb,KAAKD,SAAS,CAAEc,UAAWC,KAAKC,a,8BAGlC,WACEf,KAAKD,SAAS,CAAEa,gBAAgB,M,8BAGlC,WACEZ,KAAKD,SAAS,CAAEa,gBAAgB,M,oBAGlC,WAAU,IAAD,OACP,OACE,sBAAKI,UAAU,MAAf,UACE,6CACA,wBACEC,KAAK,SACLC,QAAS,WACP,EAAKC,oBAHT,wBAQA,wBACEF,KAAK,SACLC,QAAS,WACP,EAAKE,oBAHT,wBAQA,wBACEH,KAAK,SACLC,QAAS,WACP,EAAKG,wBAHT,6BAQCrB,KAAKN,MAAMkB,gBAAkB,cAAC,EAAD,CAAOT,KAAMH,KAAKN,MAAMmB,mB,GA9C5CJ,IAAMC,YAoDTC,IC3DfW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9eb4c6a3.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  date: Date,\n};\n\ntype Props = {\n  name: number,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    date: new Date(),\n  };\n\n  timerId?: NodeJS.Timeout;\n\n  componentDidMount() {\n    this.timerId = setInterval(\n      this.tick,\n      1000,\n    );\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  tick = () => {\n    this.setState({ date: new Date() });\n  };\n\n  render() {\n    return (\n      <p>\n        {this.state.date.toLocaleTimeString()}\n      </p>\n    );\n  }\n}\n","import React from 'react';\n\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\ntype State = {\n  isClockVisible: boolean,\n  clockName: number,\n};\n\nclass App extends React.Component {\n  state: State = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  setRandomNameHandler() {\n    this.setState({ clockName: Math.random() });\n  }\n\n  showClockHandler() {\n    this.setState({ isClockVisible: true });\n  }\n\n  hideClockHandler() {\n    this.setState({ isClockVisible: false });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.showClockHandler();\n          }}\n        >\n          Show clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.hideClockHandler();\n          }}\n        >\n          Hide clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setRandomNameHandler();\n          }}\n        >\n          Set random name\n        </button>\n        {this.state.isClockVisible && <Clock name={this.state.clockName} /> }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}